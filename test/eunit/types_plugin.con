%%% -*- mode: erlang -*-

%%% The MIT License
%%%
%%% Copyright (C) 2011-2014 by Joseph Wayne Norton <norton@alum.mit.edu>
%%% Copyright (C) 2002 by Joe Armstrong
%%%
%%% Permission is hereby granted, free of charge, to any person obtaining a copy
%%% of this software and associated documentation files (the "Software"), to deal
%%% in the Software without restriction, including without limitation the rights
%%% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
%%% copies of the Software, and to permit persons to whom the Software is
%%% furnished to do so, subject to the following conditions:
%%%
%%% The above copyright notice and this permission notice shall be included in
%%% all copies or substantial portions of the Software.
%%%
%%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
%%% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
%%% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
%%% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
%%% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
%%% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
%%% THE SOFTWARE.

+NAME("types").

+VSN("ubf2.0").

%%%%%%
+TYPES


%%%%%
%%% well-known primitives
expires()               :: {integer(), integer(), integer()}; %% erlang-style timestamp
opaque()                :: binary();
time_t()                :: integer();
timeout_or_expires()    :: timeout() | expires();
ts()                    :: integer();
utf8()                  :: binary();


%%%%%
%%% common primitives

client_breaks_req01()   :: client_breaks_req01;
client_breaks_res01()   :: client_breaks_res01;
client_breaks_req02()   :: client_breaks_req02;
client_breaks_res02()   :: client_breaks_res02;
client_timeout_req03()  :: {client_timeout_req03,timeout()};
client_timeout_res03()  :: client_timeout_res03;
client_timeout_req04()  :: {client_timeout_req04,timeout()};
client_timeout_res04()  :: client_timeout_res04;

server_breaks_req01()   :: server_breaks_req01;
server_breaks_res01()   :: server_breaks_res01;
server_breaks_req02()   :: server_breaks_req02;
server_breaks_res02()   :: server_breaks_res02;
server_timeout_req03()  :: {server_timeout_req03,timeout()};
server_timeout_res03()  :: server_timeout_res03;
server_timeout_req04()  :: {server_timeout_req04,timeout()};
server_timeout_res04()  :: server_timeout_res04;
server_crash_req05()    :: server_crash_req05;
server_crash_res05()    :: server_crash_res05;
server_crash_req06()    :: server_crash_req06;
server_crash_res06()    :: server_crash_res06;

manager_rpc_req01()     :: manager_rpc_req01;
manager_rpc_res01()     :: manager_rpc_res01;
manager_rpc_req02()     :: manager_rpc_req02;
manager_rpc_res02()     :: manager_rpc_res02;

not_implemented_req99() :: not_implemented_req99;
not_implemented_res99() :: not_implemented_res99;

restart_req()           :: restart_req;
restart_res()           :: restart_res;


%%%%%
%%% keepalive
ubf_keepalive_req()     :: keepalive;
ubf_keepalive_res()     :: ok;


%%%%%
%%% meta methods
ubf_info_req()          :: info;
ubf_info_res()          :: ubfstring();

ubf_description_req()   :: description;
ubf_description_res()   :: ubfstring();

ubf_contract_req()      :: contract;
ubf_contract_res()      :: term().
